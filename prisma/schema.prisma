generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ReportsCategory {
  LAJMERIM_I_RREMSHEM   // Fake or false report
  SHPIFJE               // Defamation or slander
  GJUHE_URREJTJE        // Hate speech
  PERVERSE_OSE_ABUZIVE  // Obscene or abusive
  SPAM_OSE_DUPLIKAT     // Spam or duplicate
  JO_RELAVANT           // Not relevant
  SHKELJE_PRIVATESIE    // Privacy violation
  TJETER                // Other
}


model Users {
  id               String             @id @default(uuid())
  createdAt        DateTime
  updatedAt        DateTime           @updatedAt
  password         String
  userProfileImage String             @default("https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png?20150327203541")
  acceptedUser     Boolean            @default(false)
  email            String             @unique
  email_verified   Boolean            @default(false)
  gender           Gender
  username         String             @unique
  fullName         String             @default("Anonimi")
  anonimity        Boolean            @default(false)
  reputation       Int                @default(0)
  complaints       Complaint[]
  complaintUpVotes ComplaintUpVotes[]
  contributions    Contributions[]
}

model Contributions {
  complaintId String
  userId      String
  complaint   Complaint @relation(fields: [complaintId], references: [id])
  user        Users     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([complaintId, userId])
}

model Companies {
  id          String      @id @default(uuid())
  name        String      @unique @db.VarChar(150)
  description String?
  logoUrl     String
  address     String
  website     String?
  email       String?
  phone       String?
  images      String?
  industry    String
  foundedYear String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  complaints  Complaint[]
}

model ComplaintUpVotes {
  userId      String
  complaintId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  complaint   Complaint @relation(fields: [complaintId], references: [id])
  user        Users     @relation(fields: [userId], references: [id])

  @@unique([userId, complaintId])
}

model Complaint {
  id              String             @id @default(uuid())
  companyId       String
  title           String
  description     String
  status          ComplaintStatus    @default(PENDING)
  category        Category
  attachments     String[]            @default([])
  createdAt       DateTime
  updatedAt       DateTime           @updatedAt
  audiosAttached  String[]           @default([])
  videosAttached  String[]           @default([])
  resolvedStatus  ResolvedStatus     @default(PENDING)
  upVotes         Int                @default(0)
  userId          String
  company         Companies          @relation(fields: [companyId], references: [id])
  user            Users              @relation(fields: [userId], references: [id])
  complaintUpVote ComplaintUpVotes[]
  contributions   Contributions[]
  reports Reports[]
}

model Reports {
  id String @id @default(uuid())
  title String
  description String
  attachments String[] @default([])
  audioAttachments String[] @default([])
  videoAttachments String[] @default([])
  complaintId String
  complaint Complaint @relation(fields: [complaintId], references: [id])
  category ReportsCategory
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subscribers {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ResolvedStatus {
  PENDING
  RESOLVED
}

enum Gender {
  MASHKULL
  FEMER
  TJETER
  PA_GJINI
}

enum Category {
  NGACIMI_NE_VENDIN_E_PUNES
  DISKRIMIMI_NE_VENDIN_E_PUNES
  SIGURIA_NE_VENDIN_E_PUNES
  ABUZIMI_NE_VENDIN_E_PUNES
  VEDIA_E_PASURISE_NE_VENDIN_E_PUNES
  KEQPERDORIMI_FINANCIAR
  RYSHFETI_KORRUPSIONI
  KONFLIKTI_I_INTERESAVE
  CENIME_NE_PROKURIM
  FAVORIZIMI
  DESHTIMI_I_SHERBIMEVE_PUBLIKE
  ABUZIMI_NE_APARATIN_E_RENDIT
  KEQPERDORIMI_I_DETYRAVE_GJYQESORE
  PROBLEME_NE_ADMINISTRIMIN_E_TOKEN
  KEQPERDORIMI_AKADEMIK
  ABUZIMI_NE_ARSIM
  CENIME_NE_PROCESIN_E_PRANIMEVE
  GABIM_MJEKESOR
  ABUZIMI_NDAJ_PACIENTEVE
  MASHTRIME_NE_KUJDESIN_SHENDETESOR
  KEQPERDORIMI_I_BILEVE
  DEMTIMI_I_AMBIENTIT
  KRIMET_NDAJ_JETESES_SEGERVE
  NDERTIMI_I_PALIGJSHEM
  REKLAMIM_I_RREJSHEM
  SIGURIA_E_PRODUKTEVE
  SHITJE_ME_CMIME_TEPER_TE_LARTA
  SHKELJE_E_PRIVATESISE_SE_TE_DHENAVE
  KRIMET_KIBERNETIKE
  NGACIMI_ONLINE
  EKSPLOATIMI_I_FEMIJEVE
  PERMBATJE_E_PALIGJSHME
  NDERTESA_TE_PASIGURTA
  PROBLEME_ME_SIGURINE_RRUGORE
  PROBLEME_ME_SHERBIMET_KOMMUNALE
  TRAFIKIMI_I_QENIEVE_NJEREZORE
  PUNE_E_DETYRUAR
  DHUNA_NE_FAMILJE
  SHKELJE_E_TE_DREJTAVE_TE_PAKICAVE
  MIZORIA_NDAJ_KAFSHEVE
  NDOTJA_ZANORE
  VANDALIZEM
  KEQPERDORIM_I_PERGJITHSHEM
  TJETER
}

enum ComplaintStatus {
  PENDING
  ACCEPTED
}
